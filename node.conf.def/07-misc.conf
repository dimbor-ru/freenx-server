#########################################################################
# Misc directives
#########################################################################

# When set to 1 this will automatically resume started sessions
#@ type: bool
ENABLE_AUTORECONNECT=1

# When set to 1 exports NXUSERIP / NXSESSIONID in nxnode
#@ type: bool
EXPORT_USERIP=1

#@ type: bool
EXPORT_SESSIONID=1

# This can be set to any executable, which is started after session startup
# like: $NODE_AUTOSTART {start|restore}
#@ type: string
#@ check: rt_expand
NODE_AUTOSTART=""

# When set to 1 will start nxagent in rootless mode.
#@ type: bool
ENABLE_ROOTLESS_MODE=1

# If enabled writes entries via the COMMAND_SESSREG program
# into utmp/wtmp/lastlog database.
# Note: You have to make sure that you add the nx user to the
#       utmp or tty group or how its called on your system
#       before this directive works.
#@ type: bool
ENABLE_USESSION=1

# In case you want to use an external 'rdesktop' command
# set this to 1.
#
# If nxdesktop cannot be found this is set automatically to 1.
#@ type: bool
ENABLE_EXTERNAL_NXDESKTOP=0

# This configuration variable determines if 'rdesktop' command should be run with -k keyboard option
# or if the keyboard should be autodetected.
#
#@ type: bool
ENABLE_EXTERNAL_NXDESKTOP_KEYBOARD=1

# In case you want to use an external 'nxviewer' command
# set this to 1.
#@ type: bool
ENABLE_EXTERNAL_NXVIEWER=0

# Time to sleep before calling terminate nxagent
#@ type: int
#@ check: 1 30
NODE_APP_WAIT_TIMEOUT=5

# Force terminate session if APP_WAIT_TIMEOUT ends
#@ type: bool
ENABLE_ROOTLESS_TERMINATE_SESSION=0

# In case ENABLE_ROOTLESS_TERMINATE_SESSION=1 if starting app found
# in APP_WAIT_MAP then appropriate process pid will be controlled of.
# Further nxnode will wait for its completion after main app pid.
# Format is: "app_name;process_name[:app_name;process_name[:...]]"
# Must be one accordance for one app only.
#@ type: string
#@ depend: ENABLE_ROOTLESS_TERMINATE_SESSION
APP_WAIT_MAP=""
