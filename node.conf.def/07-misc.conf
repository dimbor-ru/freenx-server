#########################################################################
# Misc directives
#########################################################################

# When set to 1 this will automatically resume started sessions
#@ type: bool
ENABLE_AUTORECONNECT=1

# When set to 1 exports NXUSERIP / NXSESSIONID in nxnode
#@ type: bool
EXPORT_USERIP=1

#@ type: bool
EXPORT_SESSIONID=1

# This can be set to any executable, which is started after session startup
# like: $NODE_AUTOSTART {start|restore}
#@ type: string
#@ check: rt_expand
NODE_AUTOSTART=""

# When set to 1 will start nxagent in rootless mode.
#@ type: bool
ENABLE_ROOTLESS_MODE=1

# If enabled writes entries via the COMMAND_SESSREG program
# into utmp/wtmp/lastlog database.
# Note: You have to make sure that you add the nx user to the
#       utmp or tty group or how its called on your system
#       before this directive works.
#@ type: bool
ENABLE_USESSION=1

# Extra options to vncviewer command. Default are for tigervnc-viewer
#@ type: string
EXTRA_OPTIONS_RFB="-Shared -SecurityTypes VncAuth"

# Extra options to rdesktop command. Default are for xfreerdp
#@ type: string
EXTRA_OPTIONS_RDP="/cert-ignore /kbd:0x00000409 /home-drive +clipboard"

# Time to sleep before calling terminate nxagent
#@ type: int
#@ check: 0 30
NODE_APP_WAIT_TIMEOUT=3

# Force terminate session if NODE_APP_WAIT_TIMEOUT ends
#@ type: bool
ENABLE_ROOTLESS_TERMINATE_SESSION=0

# In case ENABLE_ROOTLESS_TERMINATE_SESSION=1 if starting apps found
# in APP_WAIT_MAP then appropriate processes will be controlled of.
# Further nxnode will wait for them completion after main app finished.
# Format: "app_name1:sname1[,sname2...][;app_name2:sname3[,sname4...][;...]]"
#@ type: string
#@ depend: ENABLE_ROOTLESS_TERMINATE_SESSION
APP_WAIT_MAP=""
